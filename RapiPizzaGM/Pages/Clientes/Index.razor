@page "/clientes"
<h3>Clientes@Clientes.Count</h3>

<div>
	<button>
		Agregar
	</button>
</div>
<div class="container">
	@if (ShowForm)
	{
		<EditForm Model="request" OnValidSubmit="Send">
			<div class="mb-3">
				<label>
					Nombre
				</label>
				<InputText @bind-Value="@request.Nombre">

				</InputText>
			</div>
		</EditForm>
		<br />
	}
	@foreach (var cliente in Clientes)
	{
		<div class="card" style="width:18rem;">
			<div class="card-body">
				<label class="card-title">
					@cliente.Nombre
				</label>
				<button class="btn btn-warning">Editar</button>
				<button class="btn btn-danger">Eliminar</button>
			</div>
		</div>
	}
</div>



@code {
	public bool ShowForm { get; set; } = false;
	public string Filtro { get; set; } = "";

	public List<ClientesResponse> Clientes { get; set; }
		= new List<ClientesResponse>();

	public ClientesRequest request { get; set; } = new ClientesRequest();

	async Task CargarClientes()
	{
		var resultado = await ClientesServices.Consultar(Filtro);
		if (resultado.Success)
		{
			Clientes = resultado.Data!;
		}
	}

	protected override async Task OnInitializedAsync()
	{
		await CargarClientes();
	}

	public async Task Send()
	{
		if (request.Id == 0)
		{
			//Debo Registrar El Cliente...
			var r = await ClientesServices.Crear(request);
			if (r.Success)
			{
				await CargarClientes();
				StateHasChanged();
			}
		}
		else
		{
			//Debo Solicitar Modificar El Cliene...
			var r = await ClientesServices.Modificar(request);
			if (r.Success)
			{
				await CargarClientes();
				StateHasChanged();
			}
		}
	}

	public void Seleccionar(int Id, bool showForm = true)
	{
		ShowForm = showForm;
		request = Clientes
				.Where(c => c.Id == Id)
				.Select(c => c.ToRequest())
				.FirstOrDefault() ?? new ClientesRequest();
	}
}
